name: Test SAGE with Pytest and Conda

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test SAGE
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Cache Conda Environment
      - name: Cache Conda Environment
        uses: actions/cache@v3
        with:
          path: |
            $HOME/miniconda3/envs/sage
            $HOME/.conda/envs/sage
            $HOME/.cache/pip
            $HOME/miniconda3/pkgs
            $HOME/.condarc
          key: ${{ runner.os }}-conda-${{ hashFiles('installation/env_setup/environment.yml') }}
          restore-keys: |
            ${{ runner.os }}-conda-

      # Free Disk Space
      - name: Free Disk Space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          df -h

      # Remove conflicting CUDA repositories
      - name: Remove Existing CUDA Repositories
        run: sudo rm -f /etc/apt/sources.list.d/cuda* /etc/apt/sources.list.d/nvidia-*

      # Set up Python 3.11 as Default System Python
      - name: Set up Python 3.11
        run: |
          sudo add-apt-repository -y ppa:deadsnakes/ppa
          sudo apt-get update
          sudo apt-get install -y python3.11 python3.11-dev python3.11-distutils
          sudo ln -sf /usr/bin/python3.11 /usr/bin/python3
          python3 --version

      # Install PyTorch CPU Version in Base Python
      - name: Install PyTorch CPU Version in Base Python
        run: |
          pip install --no-cache-dir \
            torch==2.4.0 \
            torchvision==0.19.0 \
            torchaudio==2.4.0 \
            --index-url https://download.pytorch.org/whl/cpu

      # Setup Miniconda
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          use-mamba: true
          python-version: "3.11"
          activate-environment: sage
          auto-activate-base: false

      # Cache CANDY Installation
      - name: Cache CANDY Installation
        uses: actions/cache@v3
        with:
          path: deps/CANDY
          key: ${{ runner.os }}-candy-${{ hashFiles('deps/CANDY/installation/candy_build.sh') }}
          restore-keys: |
            ${{ runner.os }}-candy-

      # Install CANDY if Not Cached
      - name: Install CANDY
        if: steps.Cache CANDY Installation.outputs.cache-hit != 'true'
        run: |
          mkdir -p deps
          cd deps
          git clone https://github.com/intellistream/CANDY.git
          cd CANDY/installation
          bash candy_build.sh
          cd install_pycandy
          conda run -n sage bash install_pycandy.sh

      # Install CUDA and PyTorch
      - name: Install CUDA and PyTorch
        run: |
          mamba install -y \
            pytorch=2.4.0 \
            pytorch-cuda=12.1 \
            cuda-runtime=12.1.0 \
            -c pytorch -c nvidia

      # Create or Update Conda Environment
      - name: Create or Update Environment
        run: |
          if conda env list | grep -q "sage"; then
            mamba env remove --name sage --yes
          fi
          mamba env create --file installation/env_setup/environment.yml

      # Verify CUDA and PyTorch
      - name: Verify CUDA and PyTorch
        run: |
          conda run -n sage python -c "import torch; print(torch.cuda.is_available()); print(torch.__version__)"

      # Install Extra Pip Dependencies
      - name: Install Extra Pip Dependencies
        run: |
          conda run -n sage pip install --no-cache-dir \
            rouge-score==0.1.2 \
            evaluate==0.4.3 \
            datasets==3.0.1

      # Set up Hugging Face CLI
      - name: Set up Hugging Face CLI
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          mkdir -p ~/.huggingface
          echo -n "$HF_TOKEN" > ~/.huggingface/token

      # Run Pytest
      - name: Run Tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          conda run -n sage pytest -v tests/
