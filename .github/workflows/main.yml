name: Test LLH with Pytest and Conda

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test LLH
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Free disk space for CUDA and dependencies
      - name: Free Disk Space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          df -h

      # Remove conflicting CUDA repositories
      - name: Remove Existing CUDA Repositories
        run: sudo rm -f /etc/apt/sources.list.d/cuda* /etc/apt/sources.list.d/nvidia-*

      # Install CUDA Toolkit 11.8
      - name: Install CUDA Toolkit
        run: |
          sudo apt-get update && sudo apt-get install -y wget gnupg ca-certificates build-essential
          wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb
          sudo dpkg -i cuda-keyring_1.1-1_all.deb
          sudo apt-get update
          sudo apt-get install -y cuda-11-8
          nvcc --version

      # Setup Miniconda and Python environment
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          use-mamba: true
          python-version: "3.11"
          activate-environment: llh
          auto-activate-base: false

      # List files for debugging
      - name: List Project Files
        run: ls -al

      # Install base dependencies
      - name: Install Base Dependencies
        run: |
          mamba install -y python=3.11 pip
          mamba clean --all -y

      # Install PyTorch and CUDA libraries
      - name: Install PyTorch and CUDA
        run: |
          mamba install -y \
            pytorch=2.4.0 pytorch-cuda=11.8 torchaudio=2.4.0 torchvision=0.19.0 \
            cuda-runtime=11.8 \
            -c pytorch -c nvidia
          mamba clean --all -y

      # Install FAISS and scientific libraries
      - name: Install FAISS and Libraries
        run: |
          mamba install -y faiss-gpu=1.9.0 numpy mkl scipy -c pytorch -c nvidia
          mamba clean --all -y

      # Install ML dependencies
      - name: Install ML Dependencies
        run: |
          pip install --no-cache-dir \
            transformers==4.45.2 \
            sentence-transformers==3.1.1 \
            scikit-learn==1.5.2 \
            bitsandbytes==0.44.1 \
            xformers==0.0.27.post2

      # Install Haystack-related dependencies
      - name: Install Haystack Dependencies
        run: |
          pip install --no-cache-dir \
            grpcio==1.67.0 protobuf==5.28.2 urllib3==2.2.3 \
            pymilvus==2.4.8 milvus-lite==2.4.10 \
            haystack-ai==2.6.1 milvus-haystack==0.0.11
          mamba clean --all -y

      # Install utility libraries
      - name: Install Utility Libraries
        run: |
          pip install --no-cache-dir \
            pandas==2.2.3 ray==2.37.0 pyarrow==17.0.0 \
            nltk==3.9.1 tqdm==4.66.5 pydantic==2.9.2 loguru==0.7.2

      # Install evaluation dependencies
      - name: Install Evaluation Dependencies
        run: |
          pip install --no-cache-dir rouge-score==0.1.2 evaluate==0.4.3 datasets==3.0.1
          python -c "import nltk; nltk.download('wordnet')"

      # Install Pytest
      - name: Install Pytest
        run: |
          mamba install -y pytest
          mamba clean --all -y

      # Configure CUDA paths
      - name: Configure CUDA Paths
        run: |
          echo 'LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH' >> $GITHUB_ENV
          echo 'PATH=/usr/local/cuda/bin:$PATH' >> $GITHUB_ENV
          source $GITHUB_ENV

      # Install Pycandy dependencies and wheel
      - name: Install Pycandy
        run: pip install ./candy-0.1.0-py3-none-any.whl

      # Run Pytest
      - name: Run Tests
        run: |
          python -c "import torch; print('PyTorch version:', torch.__version__)"
          python -c "import transformers; print('Transformers version:', transformers.__version__)"
          pytest -v tests/
